#!/bin/bash

#TODO: Clean Comments up O_e !!!!

# Set Common Config variables here
DESKTOP_WALLPAPER=~/Pictures/*
USB_BOOT_SPLASH=
ICON_CACHE=
Opt_Dir=/opt/

FileShare=/var/www/html

CWD=$PWD

# clear the work space and start configuration
clear
apt-get autoclean --force-yes -y
apt-get autoremove --force-yes -y
apt-get update
apt-get install live-build git cdebootstrap -y
# apt-get dist-upgrade -y #TODO: Lets not upgrade the build server automatically when building a live Boot Image >.<

cd .. || exit

git clone https://gitlab.com/kalilinux/build-scripts/live-build-config.git

# change to the working directory so we can run the base distro config scripts
cd live-build-config || exit

# make the directory paths for the live build
mkdir -p kali-config/common/includes.chroot/usr/share/wallpapers/kali/contents/images/
mkdir -p kali-config/common/includes.chroot/usr/share/desktop-base/kali-theme/wallpaper/contents/images/

mkdir -p kali-config/common/includes.chroot/etc/apt/apt.conf.d/
mkdir -p kali-config/common/includes.chroot/etc/xdg/autostart/
#mkdir -p kali-config/common/includes.chroot/usr/share/icons/cw/
mkdir -p kali-config/common/includes.chroot/opt/frds/lib

# Copy files from local repository into live FileSystem
cp -v ../DRS/{main_menu.py,menu.py,rescue.py,fddrescue.py,jproc.py,requirements.txt} kali-config/common/includes.chroot/opt/frds/
cp -v -r ../DRS/lib/* kali-config/common/includes.chroot/opt/frds/lib/
cp -v -r $DESKTOP_WALLPAPER kali-config/common/includes.chroot/usr/share/desktop-base/kali-theme/wallpaper/contents/images/
cp -v ../DRS/desktop-background.xml kali-config/common/includes.chroot/usr/share/images/desktop-base/desktop-background.xml

# Grab network hosted configuration settings
#umount -l /media/cw # Lazy un mount
#mount -t cifs //192.168.0.241/cw -o username=root,password=cw8400 /media/cw
#cp -v /media/cw/Drew/Live_USB/scripts/rsync_exclude.conf kali-config/common/includes.chroot/etc/rsync_exclude.conf
#umount -l /media/cw

# BUG Copy all the desktop Icons onto Live image
#cp ~/Desktop/* kali-config/common/includes.chroot/root/Desktop/

# copy file from user provided locations
#cp $DESKTOP_WALLPAPER kali-config/common/includes.chroot/usr/share/wallpapers/kali/contents
#cp $ICON_CACHE/* kali-config/common/includes.chroot/usr/share/icons/cw/

# grab the local Favorites bar before building the script below
#FAVORITES=$(dconf read /org/gnome/shell/favorite-apps)
echo "Setting up favorites bar with $FAVORITES"
# We add a chroot hook and set up the wallpaper
# BUG: This isnt actualy setting any of the user customizaions durring the image process.
# still broken >..<
echo building files..........

# Set up custom packages here for building the ISO
cat <<EOF > kali-config/variant-gnome/package-lists/cw.list.chroot
# Tools I commonly Use

# RAID
mdadm

# Midnight Commander
mc

# Forensics tools
gddrescue
ddrescueview

# Drive testing
gsmartcontrol

# Resource usage
htop
gdmap
ncdu

# Stress Testing
stress

# Hardware information
hardinfo
lm-sensors

# Windows Networking compatibility
cifs-utils

# Data Destruction tools
wipe

EOF

# Setup some aliases to add defualt options or short commands here

cat <<EOF > kali-config/common/includes.chroot/root/.bash_aliases
# Use dcfldd for more information instead of dd grab a size of our input file and provide a time estimate + percent done
#alias dd='dcfldd sizeprobe=if'

# Show mount points in a nice Table
alias showfs='(printf "Device Mountpoint File_System_Type\n"; mount | cut -d " " -f 1-5 | sed "s:on::g" | sed "s:type::g") | column -t'

# Resume wget by default
alias wget='wget -c'

# Setup defualts for Rsync
# --prune-empty-dirs
# the /etc/rsync_exclude.conf should be built sepratly
# --no-OPTION will turn off the permissions, groups, and owner so we can do a straight copy to an NTFS based file system with no issues
alias rsync='rsync --partial --progress --times --recursive --compress --human-readable --verbose --no-perms --no-group --no-owner --no-times --exclude-from "/etc/rsync_exclude.conf"'

# Show Devices currently attached to system. Set some defualt values to display
alias lsblk='lsblk -o name,label,size,fstype,model'

# Setup rescue alias to launch the DRS Software
alias rescue='python3 /opt/frds/main_menu.py'

# Setup diff color by defualt
alias diff='diff --color=always'
EOF

# Case insensitive Regular Expression matching for Windows names >..<
# Ignores hibernation file, Pagefile, temporary files, temp internet files, HitmanPro, Windows Prefetch, and cookies.
cat $CWD/Fddrescue/rsync_exclude.conf > kali-config/common/includes.chroot/etc/rsync_exclude.conf

cat <<EOF >kali-config/common/includes.chroot/root/.selected_editor
# Generated by /usr/bin/select-editor
SELECTED_EDITOR="/bin/nano"
EOF

cat <<EOF > kali-config/common/includes.chroot/etc/apt/apt.conf.d/80http
Acquire::http::No-Cache true;
Acquire::http::Pipeline-Depth 0;
EOF

cat <<EOF > kali-config/common/includes.chroot/etc/apt/apt.conf.d/99compression-workaround
Aquire::CompressionTypes::Order::"gz";
EOF

# XDG Autostart desktop applications
#cat <<EOF > kali-config/common/includes.chroot/etc/xdg/autostart/Gsmart.desktop
#[Desktop Entry]
#Name=GSmart
#GenericName=Hdd Diagnostics
#Comment=Auto start the Gsmart Control HDD Diagnostics system on start
#Exec=/usr/bin/gsmartcontrol
#Terminal=false
#Type=Application
#X-GNOME-Autostart-enabled=true
#EOF


cat <<EOF > kali-config/common/includes.chroot/etc/xdg/autostart/fords.desktop
[Desktop Entry]
Name=frds
GenericName=File Recovery and Diagnostics Suite
Comment=Start Fords Menu on system startup
Exec='python3 /opt/frds/main_menu.py'
Terminal=true
Type=Application
EOF
# Sludgehammer tactic Pull the entire .config directory from current system and drop it into the Live Image
# BUG: chroot hooks dont seem to be excecuted properly so were cloning the entire working environment
echo rebuilding profiles

cat > config/hooks/gnome.chroot<< EOF
#!/bin/bash
dbus-launch --exit-with-session gsettings set org.gnone.terminal.profile:/org/mate/terminal/profiles/default/ background-darkness 0.86
dbus-launch --exit-with-session gsettings set org.gnome.terminal.profile:/org/mate/terminal/profiles/default/ background-type 'transparent'
dbus-launch --exit-with-session gsettings set org.gnome.terminal.profile:/org/mate/terminal/profiles/default/ background-color '#FFFFFFFFDDDD'
dbus-launch --exit-with-session gsettings set org.gnome.terminal.profile:/org/mate/terminal/profiles/default/ scrollback-unlimited true
cp -rf /root/.config /etc/skel/
EOF

#cp -rf ~/.config kali-config/common/includes.chroot/root/

echo changing permissions
chmod 755 kali-config/common/hooks/gnome.chroot

# Run the build
./build.sh --distribution kali-rolling --verbose

mv -v images/kali-linux-rolling-amd64.iso $FileShare/kali-linux-rolling-CI-amd64.iso

# Run a checksum on the iso and stash it.
# Remote system can pull the hash and run against local copy to see if upgrade is needed.
sha256sum --binary $FileShare/kali-linux-rolling-CI-amd64.iso > $FileShare/Manifest.sha